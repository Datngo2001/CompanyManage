#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CompanyManage
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StoreDatabase")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProductTable(ProductTable instance);
    partial void UpdateProductTable(ProductTable instance);
    partial void DeleteProductTable(ProductTable instance);
    partial void InsertCellPhoneTable(CellPhoneTable instance);
    partial void UpdateCellPhoneTable(CellPhoneTable instance);
    partial void DeleteCellPhoneTable(CellPhoneTable instance);
    partial void InsertLaptopTable(LaptopTable instance);
    partial void UpdateLaptopTable(LaptopTable instance);
    partial void DeleteLaptopTable(LaptopTable instance);
    partial void InsertTiviTable(TiviTable instance);
    partial void UpdateTiviTable(TiviTable instance);
    partial void DeleteTiviTable(TiviTable instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::CompanyManage.Properties.Settings.Default.StoreDatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ProductTable> ProductTables
		{
			get
			{
				return this.GetTable<ProductTable>();
			}
		}
		
		public System.Data.Linq.Table<CellPhoneTable> CellPhoneTables
		{
			get
			{
				return this.GetTable<CellPhoneTable>();
			}
		}
		
		public System.Data.Linq.Table<LaptopTable> LaptopTables
		{
			get
			{
				return this.GetTable<LaptopTable>();
			}
		}
		
		public System.Data.Linq.Table<TiviTable> TiviTables
		{
			get
			{
				return this.GetTable<TiviTable>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductTable")]
	public partial class ProductTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _Brand;
		
		private string _MadeIn;
		
		private System.Nullable<decimal> _Capital;
		
		private System.Nullable<decimal> _Profit;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<int> _Warranty;
		
		private System.Nullable<int> _Amount;
		
		private EntityRef<CellPhoneTable> _CellPhoneTable;
		
		private EntityRef<LaptopTable> _LaptopTable;
		
		private EntityRef<TiviTable> _TiviTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnMadeInChanging(string value);
    partial void OnMadeInChanged();
    partial void OnCapitalChanging(System.Nullable<decimal> value);
    partial void OnCapitalChanged();
    partial void OnProfitChanging(System.Nullable<decimal> value);
    partial void OnProfitChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnWarrantyChanging(System.Nullable<int> value);
    partial void OnWarrantyChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    #endregion
		
		public ProductTable()
		{
			this._CellPhoneTable = default(EntityRef<CellPhoneTable>);
			this._LaptopTable = default(EntityRef<LaptopTable>);
			this._TiviTable = default(EntityRef<TiviTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NChar(10)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MadeIn", DbType="NVarChar(MAX)")]
		public string MadeIn
		{
			get
			{
				return this._MadeIn;
			}
			set
			{
				if ((this._MadeIn != value))
				{
					this.OnMadeInChanging(value);
					this.SendPropertyChanging();
					this._MadeIn = value;
					this.SendPropertyChanged("MadeIn");
					this.OnMadeInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capital", DbType="Money")]
		public System.Nullable<decimal> Capital
		{
			get
			{
				return this._Capital;
			}
			set
			{
				if ((this._Capital != value))
				{
					this.OnCapitalChanging(value);
					this.SendPropertyChanging();
					this._Capital = value;
					this.SendPropertyChanged("Capital");
					this.OnCapitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Profit", DbType="Money")]
		public System.Nullable<decimal> Profit
		{
			get
			{
				return this._Profit;
			}
			set
			{
				if ((this._Profit != value))
				{
					this.OnProfitChanging(value);
					this.SendPropertyChanging();
					this._Profit = value;
					this.SendPropertyChanged("Profit");
					this.OnProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warranty", DbType="Int")]
		public System.Nullable<int> Warranty
		{
			get
			{
				return this._Warranty;
			}
			set
			{
				if ((this._Warranty != value))
				{
					this.OnWarrantyChanging(value);
					this.SendPropertyChanging();
					this._Warranty = value;
					this.SendPropertyChanged("Warranty");
					this.OnWarrantyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTable_CellPhoneTable", Storage="_CellPhoneTable", ThisKey="ID", OtherKey="IDCellPhone", IsUnique=true, IsForeignKey=false)]
		public CellPhoneTable CellPhoneTable
		{
			get
			{
				return this._CellPhoneTable.Entity;
			}
			set
			{
				CellPhoneTable previousValue = this._CellPhoneTable.Entity;
				if (((previousValue != value) 
							|| (this._CellPhoneTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CellPhoneTable.Entity = null;
						previousValue.ProductTable = null;
					}
					this._CellPhoneTable.Entity = value;
					if ((value != null))
					{
						value.ProductTable = this;
					}
					this.SendPropertyChanged("CellPhoneTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTable_LaptopTable", Storage="_LaptopTable", ThisKey="ID", OtherKey="IDLaptop", IsUnique=true, IsForeignKey=false)]
		public LaptopTable LaptopTable
		{
			get
			{
				return this._LaptopTable.Entity;
			}
			set
			{
				LaptopTable previousValue = this._LaptopTable.Entity;
				if (((previousValue != value) 
							|| (this._LaptopTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LaptopTable.Entity = null;
						previousValue.ProductTable = null;
					}
					this._LaptopTable.Entity = value;
					if ((value != null))
					{
						value.ProductTable = this;
					}
					this.SendPropertyChanged("LaptopTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTable_TiviTable", Storage="_TiviTable", ThisKey="ID", OtherKey="IDTivi", IsUnique=true, IsForeignKey=false)]
		public TiviTable TiviTable
		{
			get
			{
				return this._TiviTable.Entity;
			}
			set
			{
				TiviTable previousValue = this._TiviTable.Entity;
				if (((previousValue != value) 
							|| (this._TiviTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TiviTable.Entity = null;
						previousValue.ProductTable = null;
					}
					this._TiviTable.Entity = value;
					if ((value != null))
					{
						value.ProductTable = this;
					}
					this.SendPropertyChanged("TiviTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CellPhoneTable")]
	public partial class CellPhoneTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDCellPhone;
		
		private System.Nullable<int> _Ram;
		
		private System.Nullable<int> _Pin;
		
		private System.Nullable<double> _ScreenSize;
		
		private EntityRef<ProductTable> _ProductTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCellPhoneChanging(string value);
    partial void OnIDCellPhoneChanged();
    partial void OnRamChanging(System.Nullable<int> value);
    partial void OnRamChanged();
    partial void OnPinChanging(System.Nullable<int> value);
    partial void OnPinChanged();
    partial void OnScreenSizeChanging(System.Nullable<double> value);
    partial void OnScreenSizeChanged();
    #endregion
		
		public CellPhoneTable()
		{
			this._ProductTable = default(EntityRef<ProductTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCellPhone", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDCellPhone
		{
			get
			{
				return this._IDCellPhone;
			}
			set
			{
				if ((this._IDCellPhone != value))
				{
					if (this._ProductTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._IDCellPhone = value;
					this.SendPropertyChanged("IDCellPhone");
					this.OnIDCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ram", DbType="Int")]
		public System.Nullable<int> Ram
		{
			get
			{
				return this._Ram;
			}
			set
			{
				if ((this._Ram != value))
				{
					this.OnRamChanging(value);
					this.SendPropertyChanging();
					this._Ram = value;
					this.SendPropertyChanged("Ram");
					this.OnRamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pin", DbType="Int")]
		public System.Nullable<int> Pin
		{
			get
			{
				return this._Pin;
			}
			set
			{
				if ((this._Pin != value))
				{
					this.OnPinChanging(value);
					this.SendPropertyChanging();
					this._Pin = value;
					this.SendPropertyChanged("Pin");
					this.OnPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenSize", DbType="Float")]
		public System.Nullable<double> ScreenSize
		{
			get
			{
				return this._ScreenSize;
			}
			set
			{
				if ((this._ScreenSize != value))
				{
					this.OnScreenSizeChanging(value);
					this.SendPropertyChanging();
					this._ScreenSize = value;
					this.SendPropertyChanged("ScreenSize");
					this.OnScreenSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTable_CellPhoneTable", Storage="_ProductTable", ThisKey="IDCellPhone", OtherKey="ID", IsForeignKey=true)]
		public ProductTable ProductTable
		{
			get
			{
				return this._ProductTable.Entity;
			}
			set
			{
				ProductTable previousValue = this._ProductTable.Entity;
				if (((previousValue != value) 
							|| (this._ProductTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTable.Entity = null;
						previousValue.CellPhoneTable = null;
					}
					this._ProductTable.Entity = value;
					if ((value != null))
					{
						value.CellPhoneTable = this;
						this._IDCellPhone = value.ID;
					}
					else
					{
						this._IDCellPhone = default(string);
					}
					this.SendPropertyChanged("ProductTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LaptopTable")]
	public partial class LaptopTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDLaptop;
		
		private System.Nullable<int> _Ram;
		
		private string _Chip;
		
		private System.Nullable<int> _Pin;
		
		private EntityRef<ProductTable> _ProductTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLaptopChanging(string value);
    partial void OnIDLaptopChanged();
    partial void OnRamChanging(System.Nullable<int> value);
    partial void OnRamChanged();
    partial void OnChipChanging(string value);
    partial void OnChipChanged();
    partial void OnPinChanging(System.Nullable<int> value);
    partial void OnPinChanged();
    #endregion
		
		public LaptopTable()
		{
			this._ProductTable = default(EntityRef<ProductTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLaptop", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDLaptop
		{
			get
			{
				return this._IDLaptop;
			}
			set
			{
				if ((this._IDLaptop != value))
				{
					if (this._ProductTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLaptopChanging(value);
					this.SendPropertyChanging();
					this._IDLaptop = value;
					this.SendPropertyChanged("IDLaptop");
					this.OnIDLaptopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ram", DbType="Int")]
		public System.Nullable<int> Ram
		{
			get
			{
				return this._Ram;
			}
			set
			{
				if ((this._Ram != value))
				{
					this.OnRamChanging(value);
					this.SendPropertyChanging();
					this._Ram = value;
					this.SendPropertyChanged("Ram");
					this.OnRamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chip", DbType="NVarChar(50)")]
		public string Chip
		{
			get
			{
				return this._Chip;
			}
			set
			{
				if ((this._Chip != value))
				{
					this.OnChipChanging(value);
					this.SendPropertyChanging();
					this._Chip = value;
					this.SendPropertyChanged("Chip");
					this.OnChipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pin", DbType="Int")]
		public System.Nullable<int> Pin
		{
			get
			{
				return this._Pin;
			}
			set
			{
				if ((this._Pin != value))
				{
					this.OnPinChanging(value);
					this.SendPropertyChanging();
					this._Pin = value;
					this.SendPropertyChanged("Pin");
					this.OnPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTable_LaptopTable", Storage="_ProductTable", ThisKey="IDLaptop", OtherKey="ID", IsForeignKey=true)]
		public ProductTable ProductTable
		{
			get
			{
				return this._ProductTable.Entity;
			}
			set
			{
				ProductTable previousValue = this._ProductTable.Entity;
				if (((previousValue != value) 
							|| (this._ProductTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTable.Entity = null;
						previousValue.LaptopTable = null;
					}
					this._ProductTable.Entity = value;
					if ((value != null))
					{
						value.LaptopTable = this;
						this._IDLaptop = value.ID;
					}
					else
					{
						this._IDLaptop = default(string);
					}
					this.SendPropertyChanged("ProductTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TiviTable")]
	public partial class TiviTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDTivi;
		
		private System.Nullable<float> _Size;
		
		private string _ScreenTechnology;
		
		private EntityRef<ProductTable> _ProductTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTiviChanging(string value);
    partial void OnIDTiviChanged();
    partial void OnSizeChanging(System.Nullable<float> value);
    partial void OnSizeChanged();
    partial void OnScreenTechnologyChanging(string value);
    partial void OnScreenTechnologyChanged();
    #endregion
		
		public TiviTable()
		{
			this._ProductTable = default(EntityRef<ProductTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTivi", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDTivi
		{
			get
			{
				return this._IDTivi;
			}
			set
			{
				if ((this._IDTivi != value))
				{
					if (this._ProductTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTiviChanging(value);
					this.SendPropertyChanging();
					this._IDTivi = value;
					this.SendPropertyChanged("IDTivi");
					this.OnIDTiviChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Real")]
		public System.Nullable<float> Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenTechnology", DbType="NVarChar(MAX)")]
		public string ScreenTechnology
		{
			get
			{
				return this._ScreenTechnology;
			}
			set
			{
				if ((this._ScreenTechnology != value))
				{
					this.OnScreenTechnologyChanging(value);
					this.SendPropertyChanging();
					this._ScreenTechnology = value;
					this.SendPropertyChanged("ScreenTechnology");
					this.OnScreenTechnologyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductTable_TiviTable", Storage="_ProductTable", ThisKey="IDTivi", OtherKey="ID", IsForeignKey=true)]
		public ProductTable ProductTable
		{
			get
			{
				return this._ProductTable.Entity;
			}
			set
			{
				ProductTable previousValue = this._ProductTable.Entity;
				if (((previousValue != value) 
							|| (this._ProductTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductTable.Entity = null;
						previousValue.TiviTable = null;
					}
					this._ProductTable.Entity = value;
					if ((value != null))
					{
						value.TiviTable = this;
						this._IDTivi = value.ID;
					}
					else
					{
						this._IDTivi = default(string);
					}
					this.SendPropertyChanged("ProductTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
