#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CompanyManage
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLNV1")]
	public partial class DataBaseConnectDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDIADIEM_PHONG(DIADIEM_PHONG instance);
    partial void UpdateDIADIEM_PHONG(DIADIEM_PHONG instance);
    partial void DeleteDIADIEM_PHONG(DIADIEM_PHONG instance);
    partial void InsertDUAN(DUAN instance);
    partial void UpdateDUAN(DUAN instance);
    partial void DeleteDUAN(DUAN instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertThanNhan(ThanNhan instance);
    partial void UpdateThanNhan(ThanNhan instance);
    partial void DeleteThanNhan(ThanNhan instance);
    partial void InsertPhanCong(PhanCong instance);
    partial void UpdatePhanCong(PhanCong instance);
    partial void DeletePhanCong(PhanCong instance);
    partial void InsertPhongBan(PhongBan instance);
    partial void UpdatePhongBan(PhongBan instance);
    partial void DeletePhongBan(PhongBan instance);
    #endregion
		
		public DataBaseConnectDataContext() : 
				base(global::CompanyManage.Properties.Settings.Default.QLNV1ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseConnectDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseConnectDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseConnectDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseConnectDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DIADIEM_PHONG> DIADIEM_PHONGs
		{
			get
			{
				return this.GetTable<DIADIEM_PHONG>();
			}
		}
		
		public System.Data.Linq.Table<DUAN> DUANs
		{
			get
			{
				return this.GetTable<DUAN>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<ThanNhan> ThanNhans
		{
			get
			{
				return this.GetTable<ThanNhan>();
			}
		}
		
		public System.Data.Linq.Table<PhanCong> PhanCongs
		{
			get
			{
				return this.GetTable<PhanCong>();
			}
		}
		
		public System.Data.Linq.Table<PhongBan> PhongBans
		{
			get
			{
				return this.GetTable<PhongBan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIADIEM_PHONG")]
	public partial class DIADIEM_PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPB;
		
		private string _DiaDiem;
		
		private EntityRef<PhongBan> _PhongBan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPBChanging(int value);
    partial void OnMaPBChanged();
    partial void OnDiaDiemChanging(string value);
    partial void OnDiaDiemChanged();
    #endregion
		
		public DIADIEM_PHONG()
		{
			this._PhongBan = default(EntityRef<PhongBan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPB", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPB
		{
			get
			{
				return this._MaPB;
			}
			set
			{
				if ((this._MaPB != value))
				{
					if (this._PhongBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPBChanging(value);
					this.SendPropertyChanging();
					this._MaPB = value;
					this.SendPropertyChanged("MaPB");
					this.OnMaPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem", DbType="Char(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DiaDiem
		{
			get
			{
				return this._DiaDiem;
			}
			set
			{
				if ((this._DiaDiem != value))
				{
					this.OnDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem = value;
					this.SendPropertyChanged("DiaDiem");
					this.OnDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_DIADIEM_PHONG", Storage="_PhongBan", ThisKey="MaPB", OtherKey="MaPB", IsForeignKey=true)]
		public PhongBan PhongBan
		{
			get
			{
				return this._PhongBan.Entity;
			}
			set
			{
				PhongBan previousValue = this._PhongBan.Entity;
				if (((previousValue != value) 
							|| (this._PhongBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongBan.Entity = null;
						previousValue.DIADIEM_PHONGs.Remove(this);
					}
					this._PhongBan.Entity = value;
					if ((value != null))
					{
						value.DIADIEM_PHONGs.Add(this);
						this._MaPB = value.MaPB;
					}
					else
					{
						this._MaPB = default(int);
					}
					this.SendPropertyChanged("PhongBan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DUAN")]
	public partial class DUAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDA;
		
		private string _TenDA;
		
		private string _DiaDiem;
		
		private System.Nullable<int> _Phong;
		
		private EntitySet<PhanCong> _PhanCongs;
		
		private EntityRef<PhongBan> _PhongBan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDAChanging(string value);
    partial void OnMaDAChanged();
    partial void OnTenDAChanging(string value);
    partial void OnTenDAChanged();
    partial void OnDiaDiemChanging(string value);
    partial void OnDiaDiemChanged();
    partial void OnPhongChanging(System.Nullable<int> value);
    partial void OnPhongChanged();
    #endregion
		
		public DUAN()
		{
			this._PhanCongs = new EntitySet<PhanCong>(new Action<PhanCong>(this.attach_PhanCongs), new Action<PhanCong>(this.detach_PhanCongs));
			this._PhongBan = default(EntityRef<PhongBan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDA", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDA
		{
			get
			{
				return this._MaDA;
			}
			set
			{
				if ((this._MaDA != value))
				{
					this.OnMaDAChanging(value);
					this.SendPropertyChanging();
					this._MaDA = value;
					this.SendPropertyChanged("MaDA");
					this.OnMaDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDA", DbType="Char(30)")]
		public string TenDA
		{
			get
			{
				return this._TenDA;
			}
			set
			{
				if ((this._TenDA != value))
				{
					this.OnTenDAChanging(value);
					this.SendPropertyChanging();
					this._TenDA = value;
					this.SendPropertyChanged("TenDA");
					this.OnTenDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem", DbType="Char(30)")]
		public string DiaDiem
		{
			get
			{
				return this._DiaDiem;
			}
			set
			{
				if ((this._DiaDiem != value))
				{
					this.OnDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem = value;
					this.SendPropertyChanged("DiaDiem");
					this.OnDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phong", DbType="Int")]
		public System.Nullable<int> Phong
		{
			get
			{
				return this._Phong;
			}
			set
			{
				if ((this._Phong != value))
				{
					if (this._PhongBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongChanging(value);
					this.SendPropertyChanging();
					this._Phong = value;
					this.SendPropertyChanged("Phong");
					this.OnPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DUAN_PhanCong", Storage="_PhanCongs", ThisKey="MaDA", OtherKey="MaDA")]
		public EntitySet<PhanCong> PhanCongs
		{
			get
			{
				return this._PhanCongs;
			}
			set
			{
				this._PhanCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_DUAN", Storage="_PhongBan", ThisKey="Phong", OtherKey="MaPB", IsForeignKey=true)]
		public PhongBan PhongBan
		{
			get
			{
				return this._PhongBan.Entity;
			}
			set
			{
				PhongBan previousValue = this._PhongBan.Entity;
				if (((previousValue != value) 
							|| (this._PhongBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongBan.Entity = null;
						previousValue.DUANs.Remove(this);
					}
					this._PhongBan.Entity = value;
					if ((value != null))
					{
						value.DUANs.Add(this);
						this._Phong = value.MaPB;
					}
					else
					{
						this._Phong = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhongBan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.DUAN = this;
		}
		
		private void detach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.DUAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Manv;
		
		private string _HoNV;
		
		private string _Tenlot;
		
		private string _tenNV;
		
		private System.Nullable<System.DateTime> _NgSinh;
		
		private string _Dchi;
		
		private string _Phai;
		
		private System.Nullable<int> _Luong;
		
		private string _MaNQL;
		
		private System.Nullable<int> _Phong;
		
		private EntitySet<NhanVien> _NhanViens;
		
		private EntitySet<ThanNhan> _ThanNhans;
		
		private EntitySet<PhanCong> _PhanCongs;
		
		private EntityRef<NhanVien> _NhanVien1;
		
		private EntityRef<PhongBan> _PhongBan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManvChanging(string value);
    partial void OnManvChanged();
    partial void OnHoNVChanging(string value);
    partial void OnHoNVChanged();
    partial void OnTenlotChanging(string value);
    partial void OnTenlotChanged();
    partial void OntenNVChanging(string value);
    partial void OntenNVChanged();
    partial void OnNgSinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgSinhChanged();
    partial void OnDchiChanging(string value);
    partial void OnDchiChanged();
    partial void OnPhaiChanging(string value);
    partial void OnPhaiChanged();
    partial void OnLuongChanging(System.Nullable<int> value);
    partial void OnLuongChanged();
    partial void OnMaNQLChanging(string value);
    partial void OnMaNQLChanged();
    partial void OnPhongChanging(System.Nullable<int> value);
    partial void OnPhongChanged();
    #endregion
		
		public NhanVien()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			this._ThanNhans = new EntitySet<ThanNhan>(new Action<ThanNhan>(this.attach_ThanNhans), new Action<ThanNhan>(this.detach_ThanNhans));
			this._PhanCongs = new EntitySet<PhanCong>(new Action<PhanCong>(this.attach_PhanCongs), new Action<PhanCong>(this.detach_PhanCongs));
			this._NhanVien1 = default(EntityRef<NhanVien>);
			this._PhongBan = default(EntityRef<PhongBan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manv", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Manv
		{
			get
			{
				return this._Manv;
			}
			set
			{
				if ((this._Manv != value))
				{
					this.OnManvChanging(value);
					this.SendPropertyChanging();
					this._Manv = value;
					this.SendPropertyChanged("Manv");
					this.OnManvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoNV", DbType="Char(10)")]
		public string HoNV
		{
			get
			{
				return this._HoNV;
			}
			set
			{
				if ((this._HoNV != value))
				{
					this.OnHoNVChanging(value);
					this.SendPropertyChanging();
					this._HoNV = value;
					this.SendPropertyChanged("HoNV");
					this.OnHoNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenlot", DbType="Char(20)")]
		public string Tenlot
		{
			get
			{
				return this._Tenlot;
			}
			set
			{
				if ((this._Tenlot != value))
				{
					this.OnTenlotChanging(value);
					this.SendPropertyChanging();
					this._Tenlot = value;
					this.SendPropertyChanged("Tenlot");
					this.OnTenlotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNV", DbType="Char(10)")]
		public string tenNV
		{
			get
			{
				return this._tenNV;
			}
			set
			{
				if ((this._tenNV != value))
				{
					this.OntenNVChanging(value);
					this.SendPropertyChanging();
					this._tenNV = value;
					this.SendPropertyChanged("tenNV");
					this.OntenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgSinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgSinh
		{
			get
			{
				return this._NgSinh;
			}
			set
			{
				if ((this._NgSinh != value))
				{
					this.OnNgSinhChanging(value);
					this.SendPropertyChanging();
					this._NgSinh = value;
					this.SendPropertyChanged("NgSinh");
					this.OnNgSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dchi", DbType="Char(50)")]
		public string Dchi
		{
			get
			{
				return this._Dchi;
			}
			set
			{
				if ((this._Dchi != value))
				{
					this.OnDchiChanging(value);
					this.SendPropertyChanging();
					this._Dchi = value;
					this.SendPropertyChanged("Dchi");
					this.OnDchiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phai", DbType="Char(3)")]
		public string Phai
		{
			get
			{
				return this._Phai;
			}
			set
			{
				if ((this._Phai != value))
				{
					this.OnPhaiChanging(value);
					this.SendPropertyChanging();
					this._Phai = value;
					this.SendPropertyChanged("Phai");
					this.OnPhaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luong", DbType="Int")]
		public System.Nullable<int> Luong
		{
			get
			{
				return this._Luong;
			}
			set
			{
				if ((this._Luong != value))
				{
					this.OnLuongChanging(value);
					this.SendPropertyChanging();
					this._Luong = value;
					this.SendPropertyChanged("Luong");
					this.OnLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNQL", DbType="Char(4)")]
		public string MaNQL
		{
			get
			{
				return this._MaNQL;
			}
			set
			{
				if ((this._MaNQL != value))
				{
					if (this._NhanVien1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNQLChanging(value);
					this.SendPropertyChanging();
					this._MaNQL = value;
					this.SendPropertyChanged("MaNQL");
					this.OnMaNQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phong", DbType="Int")]
		public System.Nullable<int> Phong
		{
			get
			{
				return this._Phong;
			}
			set
			{
				if ((this._Phong != value))
				{
					if (this._PhongBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhongChanging(value);
					this.SendPropertyChanging();
					this._Phong = value;
					this.SendPropertyChanged("Phong");
					this.OnPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_NhanVien", Storage="_NhanViens", ThisKey="Manv", OtherKey="MaNQL")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_ThanNhan", Storage="_ThanNhans", ThisKey="Manv", OtherKey="MaNV")]
		public EntitySet<ThanNhan> ThanNhans
		{
			get
			{
				return this._ThanNhans;
			}
			set
			{
				this._ThanNhans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhanCong", Storage="_PhanCongs", ThisKey="Manv", OtherKey="MaNV")]
		public EntitySet<PhanCong> PhanCongs
		{
			get
			{
				return this._PhanCongs;
			}
			set
			{
				this._PhanCongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_NhanVien", Storage="_NhanVien1", ThisKey="MaNQL", OtherKey="Manv", IsForeignKey=true)]
		public NhanVien NhanVien1
		{
			get
			{
				return this._NhanVien1.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien1.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien1.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._NhanVien1.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._MaNQL = value.Manv;
					}
					else
					{
						this._MaNQL = default(string);
					}
					this.SendPropertyChanged("NhanVien1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_NhanVien", Storage="_PhongBan", ThisKey="Phong", OtherKey="MaPB", IsForeignKey=true)]
		public PhongBan PhongBan
		{
			get
			{
				return this._PhongBan.Entity;
			}
			set
			{
				PhongBan previousValue = this._PhongBan.Entity;
				if (((previousValue != value) 
							|| (this._PhongBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongBan.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._PhongBan.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._Phong = value.MaPB;
					}
					else
					{
						this._Phong = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhongBan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien1 = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien1 = null;
		}
		
		private void attach_ThanNhans(ThanNhan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_ThanNhans(ThanNhan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhanCongs(PhanCong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThanNhan")]
	public partial class ThanNhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _TenTN;
		
		private string _Phai;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _QuanHe;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenTNChanging(string value);
    partial void OnTenTNChanged();
    partial void OnPhaiChanging(string value);
    partial void OnPhaiChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnQuanHeChanging(string value);
    partial void OnQuanHeChanged();
    #endregion
		
		public ThanNhan()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTN", DbType="Char(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenTN
		{
			get
			{
				return this._TenTN;
			}
			set
			{
				if ((this._TenTN != value))
				{
					this.OnTenTNChanging(value);
					this.SendPropertyChanging();
					this._TenTN = value;
					this.SendPropertyChanged("TenTN");
					this.OnTenTNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phai", DbType="Char(3)")]
		public string Phai
		{
			get
			{
				return this._Phai;
			}
			set
			{
				if ((this._Phai != value))
				{
					this.OnPhaiChanging(value);
					this.SendPropertyChanging();
					this._Phai = value;
					this.SendPropertyChanged("Phai");
					this.OnPhaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanHe", DbType="Char(10)")]
		public string QuanHe
		{
			get
			{
				return this._QuanHe;
			}
			set
			{
				if ((this._QuanHe != value))
				{
					this.OnQuanHeChanging(value);
					this.SendPropertyChanging();
					this._QuanHe = value;
					this.SendPropertyChanged("QuanHe");
					this.OnQuanHeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_ThanNhan", Storage="_NhanVien", ThisKey="MaNV", OtherKey="Manv", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.ThanNhans.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.ThanNhans.Add(this);
						this._MaNV = value.Manv;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanCong")]
	public partial class PhanCong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _MaDA;
		
		private System.Nullable<int> _ThoiGian;
		
		private EntityRef<DUAN> _DUAN;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaDAChanging(string value);
    partial void OnMaDAChanged();
    partial void OnThoiGianChanging(System.Nullable<int> value);
    partial void OnThoiGianChanged();
    #endregion
		
		public PhanCong()
		{
			this._DUAN = default(EntityRef<DUAN>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDA", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDA
		{
			get
			{
				return this._MaDA;
			}
			set
			{
				if ((this._MaDA != value))
				{
					if (this._DUAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDAChanging(value);
					this.SendPropertyChanging();
					this._MaDA = value;
					this.SendPropertyChanged("MaDA");
					this.OnMaDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="Int")]
		public System.Nullable<int> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DUAN_PhanCong", Storage="_DUAN", ThisKey="MaDA", OtherKey="MaDA", IsForeignKey=true)]
		public DUAN DUAN
		{
			get
			{
				return this._DUAN.Entity;
			}
			set
			{
				DUAN previousValue = this._DUAN.Entity;
				if (((previousValue != value) 
							|| (this._DUAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DUAN.Entity = null;
						previousValue.PhanCongs.Remove(this);
					}
					this._DUAN.Entity = value;
					if ((value != null))
					{
						value.PhanCongs.Add(this);
						this._MaDA = value.MaDA;
					}
					else
					{
						this._MaDA = default(string);
					}
					this.SendPropertyChanged("DUAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhanCong", Storage="_NhanVien", ThisKey="MaNV", OtherKey="Manv", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhanCongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhanCongs.Add(this);
						this._MaNV = value.Manv;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongBan")]
	public partial class PhongBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPB;
		
		private string _TenPB;
		
		private string _TrPhong;
		
		private System.Nullable<System.DateTime> _NgNhanChuc;
		
		private EntitySet<DIADIEM_PHONG> _DIADIEM_PHONGs;
		
		private EntitySet<DUAN> _DUANs;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPBChanging(int value);
    partial void OnMaPBChanged();
    partial void OnTenPBChanging(string value);
    partial void OnTenPBChanged();
    partial void OnTrPhongChanging(string value);
    partial void OnTrPhongChanged();
    partial void OnNgNhanChucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgNhanChucChanged();
    #endregion
		
		public PhongBan()
		{
			this._DIADIEM_PHONGs = new EntitySet<DIADIEM_PHONG>(new Action<DIADIEM_PHONG>(this.attach_DIADIEM_PHONGs), new Action<DIADIEM_PHONG>(this.detach_DIADIEM_PHONGs));
			this._DUANs = new EntitySet<DUAN>(new Action<DUAN>(this.attach_DUANs), new Action<DUAN>(this.detach_DUANs));
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPB", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPB
		{
			get
			{
				return this._MaPB;
			}
			set
			{
				if ((this._MaPB != value))
				{
					this.OnMaPBChanging(value);
					this.SendPropertyChanging();
					this._MaPB = value;
					this.SendPropertyChanged("MaPB");
					this.OnMaPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPB", DbType="Char(10)")]
		public string TenPB
		{
			get
			{
				return this._TenPB;
			}
			set
			{
				if ((this._TenPB != value))
				{
					this.OnTenPBChanging(value);
					this.SendPropertyChanging();
					this._TenPB = value;
					this.SendPropertyChanged("TenPB");
					this.OnTenPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrPhong", DbType="Char(4)")]
		public string TrPhong
		{
			get
			{
				return this._TrPhong;
			}
			set
			{
				if ((this._TrPhong != value))
				{
					this.OnTrPhongChanging(value);
					this.SendPropertyChanging();
					this._TrPhong = value;
					this.SendPropertyChanged("TrPhong");
					this.OnTrPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgNhanChuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgNhanChuc
		{
			get
			{
				return this._NgNhanChuc;
			}
			set
			{
				if ((this._NgNhanChuc != value))
				{
					this.OnNgNhanChucChanging(value);
					this.SendPropertyChanging();
					this._NgNhanChuc = value;
					this.SendPropertyChanged("NgNhanChuc");
					this.OnNgNhanChucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_DIADIEM_PHONG", Storage="_DIADIEM_PHONGs", ThisKey="MaPB", OtherKey="MaPB")]
		public EntitySet<DIADIEM_PHONG> DIADIEM_PHONGs
		{
			get
			{
				return this._DIADIEM_PHONGs;
			}
			set
			{
				this._DIADIEM_PHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_DUAN", Storage="_DUANs", ThisKey="MaPB", OtherKey="Phong")]
		public EntitySet<DUAN> DUANs
		{
			get
			{
				return this._DUANs;
			}
			set
			{
				this._DUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongBan_NhanVien", Storage="_NhanViens", ThisKey="MaPB", OtherKey="Phong")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DIADIEM_PHONGs(DIADIEM_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = this;
		}
		
		private void detach_DIADIEM_PHONGs(DIADIEM_PHONG entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = null;
		}
		
		private void attach_DUANs(DUAN entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = this;
		}
		
		private void detach_DUANs(DUAN entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = null;
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.PhongBan = null;
		}
	}
}
#pragma warning restore 1591
